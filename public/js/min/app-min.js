angular.module("carTrackerApp",["ngRoute"]).config(["$routeProvider","$locationProvider",function(a,b){a.when("/",{templateUrl:"/temps/menu.temp.html",controller:"MenuController"}).when("/fuel-input",{templateUrl:"/temps/fuel-input.temp.html",controller:"CarTrackerController"}).when("/oil-level-input",{templateUrl:"/temps/oil-level-input.temp.html",controller:"OilLevelController"})}]);var carTrackerApp=angular.module("carTrackerApp");carTrackerApp.controller("MenuController",["$scope","$location",function(a,b){a.goTo=function(a){b.path(a)}}]),carTrackerApp.controller("CarTrackerController",["$scope","couchReq",function(a,b){var c={timestamp:"",type:"fuel",car:"Gypsy-Danger",odometer:"",gallons:"",price:"",total:"",location:"",fuelGrade:""};a.newRefuel={},a.submitForm=function(){b.add(a.newRefuel)},a.resetForm=function(){for(var b in c)a.newRefuel[b]=c[b]},a.resetForm()}]),carTrackerApp.controller("OilLevelController",["$scope","couchReq",function(a,b){var c={timestamp:"",type:"oil",car:"Gypsy-Danger",odometer:"",oilLevel:0};a.newOilLevelCheck={},a.updateOilAmount=function(b){a.newOilLevelCheck.oilLevel=Math.round(b.offsetX/document.getElementById("oilLevelIndicator").clientWidth*100),console.log(a.newOilLevelCheck.oilLevel)},a.submitForm=function(){b.add(a.newOilLevelCheck)},a.resetForm=function(){for(var b in c)a.newOilLevelCheck[b]=c[b]},a.resetForm()}]);var carTrackerApp=angular.module("carTrackerApp");carTrackerApp.directive("submissionButtons",function(){return{templateUrl:"/temps/submission-buttons.temp.html"}});var carTrackerApp=angular.module("carTrackerApp");carTrackerApp.service("couchReq",["$http",function(a){var b={baseUrl:"http://192.168.1.25:40570/",db:"car_info",headers:{"Content-Type":"application/json"}},c=[],d=function(d){a.get(b.baseUrl+"_uuids?count="+d).then(function(a){c=a.data.uuids},function(a){a.message.indexOf("ECONNREFUSED")?console.log("Unable to connect to database to obtain UUIDs. Connection refused."):console.log("Caught "+a.name+" | "+a.message)})};d(25);var e=function(){var a=c[0];return c.splice(0,1),0===c.length&&d(25),a};this["delete"]=function(c,d){var e={url:b.baseUrl+b.db+"/"+c+"?rev="+d,method:"DELETE",headers:{"Content-Type":"application/json"}};a(e).then(function(a){console.log("DELETED: "+a.data)},function(a){console.log(a)})},this.add=function(c){var d={url:b.baseUrl+b.db+"/"+e(),method:"PUT",data:c,headers:{"Content-Type":"application/json"}};a(d).then(function(a){return console.log("PUT NEW SUCCESSFUL: "+a),{id:a.id,rev:a.rev}},function(a){console.log(a)})},this.update=function(c){c.hasOwnProperty("$$hashKey")&&delete c.$$hashKey;var d={url:b.baseUrl+b.db+"/"+c._id,method:"PUT",data:c,headers:{"Content-Type":"application/json"}};a(d).then(function(a){console.log("PUT SUCCESSFUL: "+a)},function(a){console.log(a)})}}]);